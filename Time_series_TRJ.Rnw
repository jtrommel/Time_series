\documentclass{tufte-book}
\usepackage{graphicx}  % werken met figuren
\usepackage{gensymb} % werken met wetenschappelijke eenheden\usepackage{geometry}
\usepackage{changepage} % http://ctan.org/pkg/changepage
\usepackage[dutch,british]{babel} % instelling van de taal (woordsplitsing, spellingscontrole)
\usepackage[parfill]{parskip} % Paragrafen gescheiden door witte lijn en geen inspringing
\usepackage[font=small,skip=3pt]{caption} % Minder ruimte tussen figuur/table en ondertitel. Ondertitel klein
\usepackage{capt-of}
\usepackage{indentfirst}
\setlength{\parindent}{0.7cm}
\usepackage{enumitem} % Laat enumerate werken met letters
\usepackage{url}
\usepackage{lipsum}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
% Prints a trailing space in a smart way.
\usepackage{xspace}
\usepackage{hyperref}
\usepackage{amsmath}

\DeclareGraphicsExtensions{.pdf,.png,.jpg}

% Alter some LaTeX defaults for better treatment of figures:
% See p.105 of "TeX Unbound" for suggested values.
% See pp. 199-200 of Lamport's "LaTeX" book for details.
%   General parameters, for ALL pages:
    \renewcommand{\topfraction}{0.9}	% max fraction of floats at top
    \renewcommand{\bottomfraction}{0.9}	% max fraction of floats at bottom
%   Parameters for TEXT pages (not float pages):
    \setcounter{topnumber}{2}
    \setcounter{bottomnumber}{2}
    \setcounter{totalnumber}{4}     % 2 may work better
    \renewcommand{\textfraction}{0.1}	% allow minimal text w. figs
%   Parameters for FLOAT pages (not text pages):
    \renewcommand{\floatpagefraction}{0.8}	% require fuller float pages
% N.B.: floatpagefraction MUST be less than topfraction !!
\setcounter{secnumdepth}{3}

\newcommand{\tthdump}[1]{#1}

\newcommand{\openepigraph}[2]{
  \begin{fullwidth}
  \sffamily\large
    \begin{doublespace}
      \noindent\allcaps{#1}\\ % epigraph
      \noindent\allcaps{#2} % author
    \end{doublespace}
  \end{fullwidth}
}


\usepackage{makeidx}
\makeindex

\title{Time series}
\author{Jan Trommelmans}

\begin{document}
\SweaveOpts{concordance=TRUE,prefix.string=TS}
\setkeys{Gin}{width=1.1\marginparwidth} %% Sweave

\frontmatter

\newpage\thispagestyle{empty}
\openepigraph{
It's tough to make predictions, especially about the future.
}{Yogi Berra
}

\maketitle

\chapter*{Introduction}
\label{ch:introduction}

In the ''Good Judgement Open" forecast tournament, many questions deal with time series: data obtained at regularly spaced time intervals. Examples are: daily closing price of Brent Crude Oil, polling results for different political parties prior to an election, the exchange rate of one currency vs. another. These time series can exhibit a number of properties:
\begin{enumerate}
  \item a \emph{trend}. This can take the form of a function (linear, polynomial, exponential ...) that we obtain from a model. Or it can be found in the form of calculated values using a smoothing operation.
  \item a \emph{periodic} element. Again this can be modelled by a function (e.g. the sum of sine-funtion using the Discrete Fourier Transform of the (detrended) signal). Or it can take the form of calculated values such as Additive/Multiplicative Seasonal Effects.
  \item an element of \emph{error}. This can be caused by unknown factors, unforeseen periodic influences, measuring and/or rounding errors etc.
\end{enumerate}

The programming language \textsf{R} has a specific object to work with time series. It is aptly named \emph{time series object}. This object does not only include the data that were recorded, but also information about the time it was recorded. \textsf{R} base has the \texttt{ts}-command which turns a vector or matrix of data into a time series object. When we want to transform our data into a time series object with \texttt{ts}, we have to include a parameter which is called \texttt{frequency}. This causes a lot of problems (for me a least).

The aim of this article is to get some clarity about how to set this parameter \texttt{frequency} and its consequences when using \textsf{R} base languange or one of the many packages that were specifically developed for working with time series objects.

\mainmatter

\chapter{Working with time series in a standard data frame}
\label{ch:data frame}

\section{Making your own date column}
\label{sec:own date column}

\newthought{Time series data} are usually available as a vector or a matrix of numerical values. An example

<<echo=FALSE>>=
library(tidyverse)
library(xtable)
library(lubridate)
library(gridExtra)
@

% Setting the ggplot theme:
<<echo=FALSE>>=
JT.theme <- theme(panel.border = element_rect(fill = NA, colour = "gray10"),
                  panel.background = element_blank(),
                  panel.grid.major = element_line(colour = "gray85"),
                  panel.grid.minor = element_line(colour = "gray85"),
                  panel.grid.major.x = element_line(colour = "gray85"),
                  axis.text = element_text(size = 8 , face = "bold"),
                  axis.title = element_text(size = 9 , face = "bold"),
                  plot.title = element_text(size = 10 , face = "bold"),
                  strip.text = element_text(size = 8 , face = "bold"),
                  strip.background = element_rect(colour = "black"),
                  legend.text = element_text(size = 8),
                  legend.title = element_text(size = 9 , face = "bold"),
                  legend.background = element_rect(fill = "white"),
                  legend.key = element_rect(fill = "white"))
@
<<echo=FALSE>>=
JT.example1 <- c(6, 5.5, 4.2, 2.8, 3.7, 7.1, 6.8, 4.4, 6.7, 7.9)
JT.example1.df <- data.frame(value=JT.example1) 
print(JT.example1.df)
@

When these data are collected sequentially, the rownames give the order. We put this order into a new variable ''nr".

<<label=JTex1,fig=TRUE,include=FALSE, echo=FALSE>>=
JT.example1.df <- data.frame(nr=c(1:length(JT.example1)), value=JT.example1)
ggplot(data=JT.example1.df) +
  geom_point(aes(x=nr,y=value), size=3, color="red") +
  geom_linerange(aes(x=nr,ymin=0,ymax=value),linetype=3, size=1) +
  scale_x_continuous(breaks=c(1:length(JT.example1))) +
  scale_y_continuous(breaks=seq(0,10,1)) +
  labs(title="Example of equally spaced observations") +
  JT.theme
@

\begin{marginfigure}[0cm]
\includegraphics[width=1\textwidth]{TS-JTex1}
\label{fig:JTex1}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{marginfigure}

\newthought{Of course} it could be interesting to have the actual time (date + hms) at which the observations were made. The \texttt{lubridate}-package gives us simple to use and easy to understand function that we can use to create \texttt{date}-objects in R. For example: if the measurements were made on October 8th 2015, starting at 13:45 and done every minute we can create a column ''date" using \texttt{lubridate} and \texttt{seq}-function. Take care to set the ''by"-parameter with as.difftime().

<<>>=
Sys.setenv(TZ="Europe/Brussels")
JT.example1.df$date <- seq(ymd_hms("2015-10-08 13:45:00"), 
                           length = 10, by=as.difftime(minutes(1)))
str(JT.example1.df)
@

We can see that the ''date"-variable has the class \texttt{date}.

<<echo=FALSE>>=
print(JT.example1.df)
@

ggplot can handle date-type variables. This has the advantage that the time-axis is now using the correct times at which the measurements were made.

<<label=JTex2,fig=TRUE,include=FALSE, echo=FALSE>>=
ggplot(data=JT.example1.df) +
  geom_point(aes(x=date, y=value), size=3, color="red") +
  geom_linerange(aes(x=date, ymin=0,ymax=value),linetype=3, size=1) +
  scale_y_continuous(breaks=seq(0,10,1)) +
  labs(title="Example of equally spaced observations with exact times") +
  JT.theme
@

\begin{marginfigure}[-7cm]
\includegraphics[width=1\textwidth]{TS-JTex2}
\label{fig:JTex2}
\setfloatalignment{b}
\end{marginfigure}

Other sequences can be generated in the same way:

<<>>=
other.seq <- seq(from=ymd("2017-01-01"), 
                 to=ymd("2017-01-31"), 
                 by=as.difftime(days(2)))
other.seq
@

\newpage
\section{Looking at the data}

\newthought{Visualisation} of the data is a good first step because it gives an indication of the basic components of a time series and the way they are linked:

\begin{enumerate}
  \item: the \emph{level} of the signal. This is the average value of the series.
  \item: the \emph{trend} of the signal: the change in the series from one period to the other
  \item: the \emph{periodicity} or \emph{seasonality} of the signal: short term cyclical behaviour that can be observed several times in the series
  \item: the \emph{noise} in the signal: random variation caused by measurement error of unknown factors
\end{enumerate}

The base signal is white noise: no level, no trend, no periodicity, just noise. Then we can superpose on this a level and/or a trend and/or periodicity. This superposition can be \texttt{additive} or \texttt{multiplicative}. These possibilities are summarized in Figure~\ref{fig:JTvisual}.

<<label=JTvisual,fig=TRUE,include=FALSE, echo=FALSE>>=
set.seed(123)
t <- c(1:100)
level <- 2
noise <- rnorm(100,0,0.5)
trend <- 1 + 0.05*t
poly <- 1 + 0.025*t + 0.0007*t^2 + 0.000002*t^3
periodic <- sin(2*pi*t/20 + pi/3) + sin(2*pi*t/60 - pi/4)
y11 <- level + noise
y12 <- level + periodic + noise
y13 <- level*periodic*noise
y21 <- level + trend + noise
y22 <- level + trend + periodic + noise
y23 <- level*trend*periodic*noise
y31 <- level + poly + noise
y32 <- level + poly + periodic + noise
y33 <- level*poly*periodic*noise
signal <- data.frame(t=t, y11=y11, y12=y12, y13=y13,
                     y21=y21, y22=y22, y23=y23,
                     y31=y31, y32=y32, y33=y33)
p11 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y11), color="red") +
  labs(title="level + noise") +
  JT.theme
p12 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y12), color="red") +
  labs(title="level + periodic + noise") +
  JT.theme
p13 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y13), color="red") +
  labs(title="level*periodic*noise") +
  JT.theme
p21 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y21), color="red") +
  labs(title="level + trend + noise") +
  JT.theme
p22 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y22), color="red") +
  labs(title="level + trend + periodic + noise") +
  JT.theme
p23 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y23), color="red") +
  labs(title="level*trend*periodic*noise") +
  JT.theme
p31 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y31), color="red") +
  labs(title="level + poly + noise") +
  JT.theme
p32 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y32), color="red") +
  labs(title="level + poly + periodic + noise") +
  JT.theme
p33 <- ggplot(data=signal, aes(x=t)) +
  geom_hline(yintercept=level) +
  geom_line(aes(y=y33), color="red") +
  labs(title="level*poly*periodic*noise") +
  JT.theme
grid.arrange(p11,p12,p13,p21,p22,p23,p31,p32,p33,ncol=3)
@

\begin{figure}
\includegraphics[width=1\textwidth]{TS-JTvisual}
\caption{Categorize time series visually}
\label{fig:JTvisual}
\setfloatalignment{b}
\end{figure}

\newpage
\section{Finding a trend}

\subsection{Trend in a formula}

The \texttt{lm}-function does not work with a date. It would not be a good idea to do so because it would try to put the intercept at date 0, which is probably the origin ot the date stamp which is 01-01-1970 by default. But we can always use the ''nr"-variable:

<<>>=
lin.model <- lm(JT.example1.df$value ~ JT.example1.df$nr)
summary(lin.model)
JT.example1.df$lin.mod <- lin.model$fitted.values
@

<<label=JTlinmod,fig=TRUE,include=FALSE, echo=FALSE>>=
ggplot(data=JT.example1.df) + 
  geom_point(aes(x=date, y=value), size=3, color="red") +
  geom_linerange(aes(x=date, ymin=0,ymax=value),linetype=3, size=1) +
  geom_line(aes(x=date, y=lin.mod), color="blue") +
  scale_y_continuous(breaks=seq(0,10,1)) +
  labs(title="Trend by linear model") +
  JT.theme
@

\begin{marginfigure}[-7cm]
\includegraphics[width=1\textwidth]{TS-JTlinmod}
\label{fig:JTlinmod}
\setfloatalignment{b}
\end{marginfigure}

The nice thing about using this model is that we get a formula for the trend. 

\newpage
\subsection{Trend as a series of numbers}

\textsf{R} has a number of inbuilt function to find a trend. Best known are the \texttt{loess}- and \texttt{lowess}-functions. \sidenote[][-1cm]{There is an excellent YouTube video on the inner workings of the \texttt{loess}- and \texttt{lowess}-function: \url{https://www.youtube.com/watch?v=85XU1T9DIps}}

<<label=JTloessmod,fig=TRUE,include=FALSE, echo=FALSE>>=
loess.model <- loess(JT.example1.df$value ~ JT.example1.df$nr, span=0.9, degree=1)
JT.example1.df$loess.mod <- predict(loess.model)
ggplot(data=JT.example1.df) + 
  geom_point(aes(x=date, y=value), size=3, color="red") +
  geom_linerange(aes(x=date, ymin=0,ymax=value),linetype=3, size=1) +
  geom_line(aes(x=date, y=loess.mod), color="blue") +
  scale_y_continuous(breaks=seq(0,10,1)) +
  labs(title="Trend by Loess-function (span=0.9, degree=1)") +
  JT.theme
@

\begin{marginfigure}[0cm]
\includegraphics[width=1\textwidth]{TS-JTloessmod}
\label{fig:JTloessmod}
\setfloatalignment{b}
\end{marginfigure}

However, using the \texttt{loess}-function is not straigthforward because it implies setting parameters like \texttt{span}, \texttt{degree}, \texttt{family} etc. Different choices give different trend lines. There is some subjectiveness in this process. There is the alternative \texttt{lowess}-function. The following quote gives some background as to the differences between both functions: \quote{The main difference with respect to the first is that lowess allows only one predictor, whereas loess can be used to smooth multivariate data into a kind of surface. It also gives you confidence intervals. In these senses, loess is a generalization. Both use tricube weighting in the local regression.} \sidenote{\url{https://stats.stackexchange.com/questions/161069/difference-between-loess-and-lowess}}.

\section{Finding periodicity}

\newthought{We can decompose} the signal by finding the level


\end{document}